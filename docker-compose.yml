version: "3.4"
services:
    postgres:
        image: "postgres:10-alpine"
        volumes:
            - "./data/.postgres:/var/lib/postgresql/data"
        environment:
            - "POSTGRES_USER=${POSTGRES_USER}"
            - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
            - "POSTGRES_DB=${POSTGRES_DB}"
        ports:
            - "${EXPOSED_POSTGRES_PORT}:5432"
    php:
        build:
            context: "./"
            target: ${PHP_FINAL_TARGET}
        working_dir: /srv/app
        volumes:
            - ./../backend:/srv/app
            - ./config/php/override.ini:/usr/local/etc/php/conf.d/override.ini
        env_file:
            - ../backend/.env
            - ./.env



        depends_on:
            - postgres
        links:
            - postgres
    nginx:
        build:
            context: ./
            target: nginx_final
        volumes:
            - ./../backend:/srv/app
            - ./config/nginx/conf.d/symfony-development.conf.template:/etc/nginx/conf.d/symfony-development.conf.template:ro
            - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        working_dir: /srv/app
        environment:
            PHP_UPSTREAM_HOST: php
            DOLLAR: "$$"
        ports:
            - "${EXPOSED_NGINX_PORT}:80"
        depends_on:
            - php
        command: /bin/bash -c "envsubst < /etc/nginx/conf.d/symfony-development.conf.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
    node:
        build:
            context: "./"
            target: node_final
        working_dir: /srv/app
        volumes:
            - "./../frontend:/srv/app"
        ports:
            - "${EXPOSED_NODE_PORT}:80"
        environment:
            EXPOSED_NODE_PORT: ${EXPOSED_NODE_PORT}
    docs:
        build:
            context: "./"
            target: docs_final
        working_dir: /srv/app
        volumes:
            - "./../docs:/srv/app"
        ports:
            - "${EXPOSED_DOCS_PORT}:3000"
